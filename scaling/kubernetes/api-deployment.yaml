apiVersion: apps/v1
kind: Deployment
metadata:
  name: odordiff2-api
  namespace: odordiff2
  labels:
    app: odordiff2-api
    component: api
    version: v3.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: odordiff2-api
      component: api
  template:
    metadata:
      labels:
        app: odordiff2-api
        component: api
        version: v3.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: odordiff2-api
      containers:
      - name: api
        image: odordiff2:v3.0-production
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: REDIS_HOST
          value: redis
        - name: REDIS_PORT
          value: "6379"
        - name: POSTGRES_HOST
          value: postgres-primary
        - name: POSTGRES_REPLICA_HOST
          value: postgres-replica
        - name: POSTGRES_DB
          value: odordiff2
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: CELERY_BROKER_URL
          value: redis://redis:6379/0
        - name: CELERY_RESULT_BACKEND
          value: redis://redis:6379/0
        - name: LOG_LEVEL
          value: info
        - name: ENABLE_SCALING
          value: "true"
        - name: ENABLE_GPU
          value: "false"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: models
          mountPath: /app/models
          readOnly: true
        - name: cache
          mountPath: /app/cache
        - name: logs
          mountPath: /app/logs
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          timeoutSeconds: 10
          periodSeconds: 30
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 10
          failureThreshold: 10
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - sleep 15
      - name: sidecar-prometheus
        image: prom/node-exporter:v1.6.1
        ports:
        - containerPort: 9100
          name: node-metrics
        resources:
          requests:
            memory: "32Mi"
            cpu: "50m"
          limits:
            memory: "64Mi"
            cpu: "100m"
      volumes:
      - name: config
        configMap:
          name: odordiff2-config
      - name: models
        persistentVolumeClaim:
          claimName: models-pvc
      - name: cache
        emptyDir:
          sizeLimit: 1Gi
      - name: logs
        emptyDir:
          sizeLimit: 500Mi
      terminationGracePeriodSeconds: 45
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - odordiff2-api
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 30
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: odordiff2-api
  namespace: odordiff2
  labels:
    app: odordiff2-api
    component: api
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: metrics
  selector:
    app: odordiff2-api
    component: api

---
apiVersion: v1
kind: Service
metadata:
  name: odordiff2-api-headless
  namespace: odordiff2
  labels:
    app: odordiff2-api
    component: api
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: odordiff2-api
    component: api

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: odordiff2-api-hpa
  namespace: odordiff2
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: odordiff2-api
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 5
        periodSeconds: 60
      selectPolicy: Max

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: odordiff2-api-pdb
  namespace: odordiff2
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: odordiff2-api
      component: api

---
# Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: odordiff2-api
  namespace: odordiff2
  labels:
    app: odordiff2-api

---
# ConfigMap for application configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: odordiff2-config
  namespace: odordiff2
  labels:
    app: odordiff2-api
data:
  production.yaml: |
    # OdorDiff-2 Production Configuration
    server:
      host: "0.0.0.0"
      port: 8000
      workers: 4
      worker_class: "uvicorn.workers.UvicornWorker"
      timeout: 300
      keepalive: 2
      max_requests: 1000
      max_requests_jitter: 100
      preload_app: true
    
    database:
      primary_host: postgres-primary
      replica_host: postgres-replica
      port: 5432
      database: odordiff2
      pool_size: 10
      max_overflow: 20
      pool_timeout: 30
      pool_recycle: 3600
    
    redis:
      host: redis
      port: 6379
      db: 0
      max_connections: 50
      health_check_interval: 30
      socket_keepalive: true
    
    celery:
      broker_url: "redis://redis:6379/0"
      result_backend: "redis://redis:6379/0"
      task_routes:
        "odordiff2.scaling.celery_tasks.generate_molecules": "generation"
        "odordiff2.scaling.celery_tasks.generate_batch": "batch"
        "odordiff2.scaling.celery_tasks.optimize_fragrance": "optimization"
    
    scaling:
      enable_autoscaling: true
      enable_load_balancing: true
      enable_caching: true
      enable_streaming: true
      enable_resource_pooling: true
    
    monitoring:
      enable_prometheus: true
      enable_tracing: true
      enable_profiling: true
      metrics_port: 9090
    
    logging:
      level: INFO
      format: json
      handlers:
        - console
        - file
      file_path: /app/logs/odordiff2.log
      max_file_size: 100MB
      backup_count: 10
    
    security:
      enable_cors: true
      cors_origins: ["*"]
      enable_rate_limiting: true
      rate_limit: "100/minute"
      enable_authentication: false
    
    models:
      path: /app/models
      cache_size: 1000
      enable_gpu: false
      batch_size: 8
      max_workers: 4

---
# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: odordiff2-api-ingress
  namespace: odordiff2
  labels:
    app: odordiff2-api
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/load-balance: "round_robin"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.odordiff2.com
    secretName: odordiff2-api-tls
  rules:
  - host: api.odordiff2.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: odordiff2-api
            port:
              number: 80