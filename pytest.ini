[tool:pytest]
# Pytest configuration for OdorDiff-2 with advanced testing features

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Markers for test categorization
markers =
    unit: Unit tests
    integration: Integration tests
    performance: Performance and benchmark tests
    security: Security and vulnerability tests
    safety: Safety and compliance tests
    slow: Slow-running tests (> 10s)
    flaky: Tests that may be flaky due to timing or external dependencies
    api: API endpoint tests
    cache: Cache system tests
    visualization: Visualization tests
    database: Database-related tests
    async: Asynchronous operation tests
    concurrent: Concurrency and threading tests
    regression: Regression tests for bug fixes
    smoke: Basic smoke tests for CI/CD
    e2e: End-to-end workflow tests

# Test output options with enhanced reporting
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --color=yes
    --durations=10
    --durations-min=0.5
    --cov=odordiff2
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=json:coverage.json
    --cov-fail-under=85
    --cov-branch
    --cov-context=test
    --junitxml=junit.xml
    --html=report.html
    --self-contained-html
    --maxfail=5
    --tb=short

# Coverage configuration
cov-fail-under = 85
cov-branch = true

# Test timeout (in seconds)
timeout = 300
timeout_method = thread

# Parallel execution with pytest-xdist
# Uncomment to enable parallel testing
# addopts += -n auto --dist=worksteal

# Filter warnings to reduce noise
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*rdkit.*:UserWarning
    ignore:.*torch.*:UserWarning
    ignore:.*pandas.*:FutureWarning
    ignore::pytest.PytestUnraisableExceptionWarning
    ignore::pytest.PytestCollectionWarning
    error::UserWarning:odordiff2.*
    error::DeprecationWarning:odordiff2.*

# Logging configuration for tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(name)s: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Asyncio configuration
asyncio_mode = auto

# Minimum versions for dependencies
minversion = 7.0

# Required plugins (will fail if not installed)
required_plugins = 
    pytest-cov>=4.1.0
    pytest-html>=3.1.0
    pytest-asyncio>=0.21.0
    pytest-timeout>=2.1.0
    pytest-mock>=3.10.0

# Test session configuration
console_output_style = progress
junit_logging = all
junit_log_passing_tests = true
junit_duration_report = total
junit_suite_name = odordiff2_tests

# Performance and resource limits
timeout = 300
markers =
    timeout: Custom timeout for specific tests

# Collect and run configuration
collect_ignore = [
    "setup.py",
    "build/",
    "dist/",
    ".eggs/",
    "venv/",
    ".venv/",
    "env/",
    ".env/",
    "__pycache__/",
    ".pytest_cache/",
    "node_modules/",
    ".git/",
    "htmlcov/",
    "docs/_build/"
]

# Test discovery patterns
python_files = test_*.py *_test.py tests.py
python_classes = Test* *Tests
python_functions = test_* *_test

# Doctest configuration
doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL ELLIPSIS
doctest_encoding = utf-8

# Cache configuration
cache_dir = .pytest_cache

# Custom test execution order
# Run fast tests first, then slow tests
markers =
    order: Test execution order priority